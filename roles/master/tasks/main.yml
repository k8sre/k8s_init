- name: "创建kubernetes证书目录"
  file:
    path: "/etc/kubernetes/pki/"
    owner: root
    group: root
    state: directory

- name: "创建kubectl目录"
  file:
    path: "~/.kube"
    state: directory

- name: "创建kubernetes-audit日志文件"
  file:
    path: "/var/log/kubernetes-audit.log"
    owner: root
    group: root
    state: touch
  tags: audit-log

- name: "安装master节点"
  get_url:
    url: "{{ item.line }}"
    dest: /usr/bin/
  with_items:
    - {line: "{{ kube_down_url }}/{{ kubernetes.version }}/kube-apiserver"}
    - {line: "{{ kube_down_url }}/{{ kubernetes.version }}/kube-controller-manager"}
    - {line: "{{ kube_down_url }}/{{ kubernetes.version }}/kube-scheduler"}
    - {line: "{{ kube_down_url }}/{{ kubernetes.version }}/kubectl"}
  tags: kube_master

- name: "添加执行权限"
  file:
    dest: "{{ item.line }}"
    mode: 0755
  with_items:
    - {line: '/usr/bin/kube-apiserver'}
    - {line: '/usr/bin/kube-controller-manager'}
    - {line: '/usr/bin/kube-scheduler'}
    - {line: '/usr/bin/kubectl'}
  tags: kube_master

- name: "分发master证书文件"
  copy:
    src: "{{ item.line }}"
    dest: "/etc/kubernetes/pki/"
    mode: 0640
  with_items:
    - {line: '{{ cert.dir }}/ca.key'}
    - {line: '{{ cert.dir }}/ca.pem'}
    - {line: '{{ cert.dir }}/sa.key'}
    - {line: '{{ cert.dir }}/sa.pub'}
    - {line: '{{ cert.dir }}/etcd-ca.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/apiserver.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/apiserver.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/apiserver-etcd-client.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/apiserver-etcd-client.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/apiserver-kubelet-client.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/apiserver-kubelet-client.pem'}
    - {line: '{{ cert.dir }}/front-proxy-ca.key'}
    - {line: '{{ cert.dir }}/front-proxy-ca.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/front-proxy-client.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/front-proxy-client.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/controller-manager.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/controller-manager.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/scheduler.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/scheduler.pem'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/admin.key'}
    - {line: '{{ cert.dir }}/{{ ansible_default_ipv4.address }}/admin.pem'}
  tags: dis_certs

- name: "分发kubeconfig"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: "admin.kubeconfig.j2",dest: "~/.kube/config" }
    - {src: "controller-manager.kubeconfig.j2",dest: "/etc/kubernetes/controller-manager.kubeconfig" }
    - {src: "scheduler.kubeconfig.j2",dest: "/etc/kubernetes/scheduler.kubeconfig" }
    - {src: "kube-apiserver.conf.j2",dest: "/etc/kubernetes/kube-apiserver.conf" }
    - {src: "kube-apiserver.service.j2",dest: "/usr/lib/systemd/system/kube-apiserver.service" }
    - {src: "kube-controller-manager.conf.j2",dest: "/etc/kubernetes/kube-controller-manager.conf" }
    - {src: "kube-controller-manager.service.j2",dest: "/usr/lib/systemd/system/kube-controller-manager.service" }
    - {src: "kube-scheduler.conf.j2",dest: "/etc/kubernetes/kube-scheduler.conf" }
    - {src: "kube-scheduler.service.j2",dest: "/usr/lib/systemd/system/kube-scheduler.service" }
    - {src: "audit-policy.yaml.j2",dest: "/etc/kubernetes/audit-policy.yaml" }
  tags: dis_master_config

- name: "重启kube-apiserver"
  systemd:
    name: kube-apiserver
    state: restarted
    daemon_reload: yes
    enabled: yes
  tags: restart_apiserver

- name: "重启kube-controller-manager"
  systemd:
    name: kube-controller-manager
    state: restarted
    daemon_reload: yes
    enabled: yes
  tags: restart_controller

- name: "重启kube-scheduler"
  systemd:
    name: kube-scheduler
    state: restarted
    daemon_reload: yes
    enabled: yes
  tags: restart_scheduler

- name: "添加kubectl命令自动补全"
  lineinfile:
    dest: "/etc/profile"
    line: "source <(kubectl completion bash)"
    state: present

- name: "等待kube-apiserver启动成功"
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 6443
    delay: 5
    sleep: 2
  tags: healthcheck

- name: "等待kube-controller-manager启动成功"
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 10257
    delay: 5
    sleep: 2
  tags: healthcheck

- name: "等待kube-scheduler启动成功"
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 10259
    delay: 5
    sleep: 2
  tags: healthcheck

- name: "kube-apiserver健康检查"
  uri:
    url: "https://{{ ansible_default_ipv4.address }}:6443/healthz"
    return_content: yes
    validate_certs: no
    client_cert: "{{ cert.dir }}/{{ ansible_default_ipv4.address }}/admin.pem"
    client_key: "{{ cert.dir }}/{{ ansible_default_ipv4.address }}/admin.key"
  register: apiserver
  failed_when: "'ok' not in apiserver.content"
  connection: local
  tags: healthcheck

- name: "kube-controller-manager健康检查"
  uri:
    url: "https://{{ ansible_default_ipv4.address }}:10257/healthz"
    return_content: yes
    validate_certs: no
  register: controller
  failed_when: "'ok' not in controller.content"
  connection: local
  tags: healthcheck

- name: "kube-scheduler健康检查"
  uri:
    url: "https://{{ ansible_default_ipv4.address }}:10259/healthz"
    return_content: yes
    validate_certs: no
  register: scheduler
  failed_when: "'ok' not in scheduler.content"
  connection: local
  tags: healthcheck
